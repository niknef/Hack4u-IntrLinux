
COMANDOS LINUX: 
https://ciberninjas.com/chuleta-comandos-linux/
https://www.bonaval.com/kb/cheats-chuletas/comandos-basicos-linux
https://www.fing.edu.uy/inco/cursos/sistoper/recursosLaboratorio/tutorial0.pdf

Redirectores en Bash:
https://hack4u.io/wp-content/uploads/2022/05/bash-redirections-cheat-sheet.pdf

Permisos y derechos: 
https://blog.desdelinux.net/permisos-y-derechos-en-linux/?msclkid=22f8cb88ba8111ecb5d8a3db91f066ab
https://www.profesionalreview.com/2017/01/28/permisos-basicos-linux-ubuntu-chmod/
https://www.softzone.es/programas/linux/permisos-archivos-directorios-linux/
https://www.hostinger.es/tutoriales/cambiar-permisos-y-propietarios-linux-linea-de-comandos/

asignacion de permisos:
https://www.ionos.es/digitalguide/servidores/know-how/asignacion-de-permisos-de-acceso-con-chmod/
https://atareao.es/tutorial/terminal/propietarios-y-permisos/
https://computernewage.com/2016/05/22/gestionar-usuarios-y-permisos-en-linux/
https://atareao.es/como/gestion-de-usuarios-y-grupos-en-linux/

notacion octal de permisos: 
https://blog.alcancelibre.org/staticpages/index.php/permisos-sistema-de-archivos

Permisos especiales – Sticky Bit:
https://keepcoding.io/blog/que-es-el-sticky-bit-y-como-configurarlo/
https://www.fpgenred.es/GNU-Linux/el_bit_sticky.html

Control de atributos de ficheros en Linux – Chattr y Lsattr:
https://rm-rf.es/chattr-y-lsattr-visualizar-y-modificar-atributos-en-sistemas-de-ficheros-linux/#:~:text=El%20primer%20comando%2C%20lsattr%20permite,chmod%2C%20chown%2Csetfacl%E2%80%A6)
https://programmerclick.com/article/5604675172/

Permisos especiales – SUID y SGID:
https://deephacking.tech/permisos-sgid-suid-y-sticky-bit-linux/#:~:text=Permiso%20SGID,-El%20permiso%20SGID&text=Si%20se%20establece%20en%20un,perteneciente%2C%20el%20grupo%20del%20directorio.
https://www.ochobitshacenunbyte.com/2019/06/17/permisos-especiales-en-linux-sticky-bit-suid-y-sgid/
https://www.ibiblio.org/pub/linux/docs/LuCaS/Manuales-LuCAS/SEGUNIX/unixsec-2.1-html/node56.html

Capabilities:
http://www.etl.it.uc3m.es/Linux_Capabilities

Uso de bashrc y zshrc:
https://www.compuhoy.com/que-es-bashrc-en-linux/
https://respontodo.com/que-es-zsh-y-por-que-deberia-usarlo-en-lugar-de-bash/

Uso y manejo con Tmux:
https://hack4u.io/wp-content/uploads/2022/05/Tmux-Cheat-Sheet.pdf

Comandos Find y Locate en Linux: 
https://www.hostinger.es/tutoriales/como-usar-comando-find-locate-en-linux/

----------------------------------

Clase : Comando basicos linux (1-2)

- id = nos indica en que grupo estamos 

- etc/group = ruta donde estan los grupos

- cat = nos muestra el contenido de un archivo

- which = nos muestra la ruta absoluta del binario que querramos 

- grep = nos sirve para filtrar ej : grep "floppy"

----------------------------------

Clase : Comando basico linux (2-2)

- command -v = parecido al which, sirve para buscar la ruta absoluta

- ls -l = hace un ls pero con mas detallado

$PATH $HOME $SHELL (variables de entorno)

----------------------------------

clase : Control de flujo stderr- srdout, procesos en segundo plano

Podemos concatenar comandos 

$? nos dice el codigo de estado de un comando 

    whoami; ls (esto lo que hace es ejecutar dos)
    whoami && ls (hace un comando y si esta bien hace el segundo)
    whoami || ls (este va a hacer los dos comandos sin importar que el primero falle)


Los errores se definen como stderr (2) entonces lo que podemos hacer para no mostrar los errores seria :
    whoami 2>/dev/null ( > redirije a x lugar , el dev/null es un archivo que desvanece lo que redirigimos)

stdout es la respuesta del comando, podemos hacer que no se vea :

ejemplo de como redirijir el stderr y el stdout al dev/ null : /etc/host > /dev/null 2>&1
pero la manera eficiente es : cat /etc/host &>/dev/null  ===> &>

Poner en segundo plano : 
    hay muchos procesos que cuelgan de nuestra consola, y lo podemos poner con = & (al final del comando)
    ahora si usamos al final -- & disown -- es como que lo separamos de la terminal 

----------------------------------

clase : Descriptores De archivos

    exec 5<> data (nos crea un archivo data con lectura y escritura)
<> nos sirve para crear con permiso de escrituira y lectura
> escritura
< lectura 
>& lo manda y lo escribe en un fichero 
>&- cierra el archivo 

----------------------------------

Clase : Lectura e interpretacion de permisos (1-2)

    tocuh - crear archivo 

    si hacemos echo > lo metemos en el directorio 
    y si hacemos >> lo va a meter tipo append 

    ls -l 
    
        .rw-r--r--

        d (directorio)

        rwx
        r -- read lectura
        w -- write escritura
        x -- se puede meter / lo puede ejecutar 


    Propietario        Grupo           Otros
        ---             ---             ---
        rw-             r--             r--
        leer y esc      leer            leer 

----------------------------------

Clase : Asignacion de permisos (1-2)

    d con permiso de r-x siginifica que yo lo puedo leer y me puedo meter en el directorio, pero no modificarlo

    para dar permisos: 

    - chmod = cambiar permisos
        chmod o+w (lo que hacemos es darle w a otros)
    
    - chgrp = cambiar grupo 
        chgrp nicofipo prueba   cambiar el ngrupo de prueba a nicofirpo

----------------------------------

Clase : Asignacion de permisos (2-2)

    crear usuario

    - useradd = crear usuario 

        - useradd pepe -s /bin/bash -d /home/pepe (creamos usuario pepe, le asignamos las shell bash y le marcamos el directorio)

        -passwd pepe (asignamos contraseña)

        -chgrp pepe pepe (cambiamos el grupo)

        - chown = cambia propietario
            chown pepe pepe 

        - chown pepe:pepe pepe 
            asignamos grupo y propietario 

        -groupadd = creamos nuevo grupo


        usermod -a -G Alumnos pepe (metemos a pepe en grupo alumnos)


----------------------------------

Clase : Notacion octal de permisos

    - r ---> 4
    - w ---> 2
    - x ---> 1

----------------------------------

Clase : Permisos especiales – Sticky Bit

    es importante saber que los permisos preseden de la carpeta principal del archivo

    chmod +t (+t = permiso Sticky Bit)
        el permiso Sticky Bit permisos especiales de acceso utilizado en ficheros y directorios del entorno Unix y derivados como GNU/Linux. Su objetivo es que solo el usuario creador pueda eliminar o renombrar un archivo

----------------------------------

Clase : Control de atributos de ficheros en Linux – Chattr y Lsattr

    -cp = copia

    Chattr:
    asignamos una flag especialm como por ejemplo inmutable +i

        chattr +i -V prueba 


    Lsattr: nos permite ver las flags y permisos especiales 

----------------------------------

Clase : Permisos especiales – SUID y SGID

    xargs (se usa en comandos con pipes, donde le decimos que a todo lo que da el comando anterior queremos hacerle tal cosa)
        which python3.9 | xargs ls -l 
    SUID:
        Agregamos permiso suid:
            chmod 4755 (el 4) o chmod u+s 
        esto provoca es que se pueda escalar privilegios aveces
            podemos buscar: 
                find / -type -perm -4000 (esto nos va a buscar archivos que tengan de permiso activo el suid)
                dinf / -type -perm -400 2>/dev/null (mandos los errores al null )
        
        cuando un binario es suid, siendo el usuario que seamos vamos a poder ejecutar ese archivo de forma temporal como el propietario de ese archivo 


    SGID:
        es lo mismo pero aplica a nivel de grupo en vez de propietario (este va con 2 en vez de 4)
        O chmod g+s o chmod 2000 
            find / -type -perm -2000 (esto nos va a buscar archivos que tengan de permiso activo el SGID)

----------------------------------

Clase : Privilegios especiales – Capabilities

    Son privilegios que se asignan para tener siertas capacidades 

    getcap = herramienta que nos permite ver las capabilities del sistema 

    -getcap -r / 2>/dev/null (capabilities del sistema)

    entramos a python3 desde root 
    import.os 
    os.setuid(0)

    hacemos un getcap /usr/bin/python3.9
                setcap -r /usr/bin/python3.9

----------------------------------

clase : Estructura de directorios del sistema

--Directorio Raíz:

    El directorio raíz, simbolizado por el símbolo (/), es el directorio principal a partir del cual se ramifican todo el resto de directorios.

--Directorio /bin:

    El directorio /bin es un directorio estático y compartible en el que se almacenan archivos binarios/ejecutables necesarios para el funcionamiento del sistema. Estos archivos binarios los pueden usar la totalidad de usuarios del sistema operativo.

--Directorio /boot:

    Es un directorio estático no compartible que contiene la totalidad de archivos necesarios para el arranque del ordenador excepto los archivos de configuración. Algunos de los archivos indispensables para el arranque del sistema que acostumbra a almacenar el directorio /boot son el kernel y el gestor de arranque Grub.

--Directorio /dev:

    El sistema operativo Gnu-Linux trata los dispositivos de hardware como si fueran un archivo. Estos archivos que representan nuestros dispositivos de hardware se hallan almacenados en el directorio /dev.

    Algunos de los archivos básicos que podemos encontrar en este directorio son:

            _cdrom que representa nuestro dispositivo de CDROM.
            _sda que representa nuestro disco duro sata.
            _audio que representa nuestra tarjeta de sonido.
            _psaux que representa el puerto PS/2.
            _lpx que representa nuestra impresora.
            _fd0 que representa nuestra disquetera.

--Directorio /etc:

    El directorio /etc es un directorio estático que contiene los archivos de configuración del sistema operativo. Este directorio también contiene archivos de configuración para controlar el funcionamiento de diversos programas.

    Algunos de los archivos de configuración de la carpeta /etc pueden ser sustituidos o complementados por archivos de configuración ubicados en nuestra carpeta personal /home.

--Directorio /home:

    El directorio /home se trata de un directorio variable y compartible. Este directorio está destinado a alojar la totalidad de archivos personales de los distintos usuarios del sistema operativo a excepción del usuario root. Algunos de los archivos personales almacenados en la carpeta /home son fotografías, documentos de ofimática, vídeos, etc.

--Directorio /lib:

    El directorio /lib es un directorio estático y que puede ser compartible. Este directorio contiene bibliotecas compartidas que son necesarias para arrancar los ejecutables que se almacenan en los directorios /bin y /sbin.

--Directorio /mnt:

    El directorio /mnt tiene la finalidad de albergar los puntos de montaje de los distintos dispositivos de almacenamiento como por ejemplo discos duros externos, particiones de unidades externas, etc.

--Directorio /media:

    La función del directorio /media es similar a la del directorio /mnt. Este directorio contiene los puntos de montaje de los medios extraíbles de almacenamiento como por ejemplo memorias USB, lectores de CD-ROM, unidades de disquete, etc.

--Directorio /opt:

    El contenido almacenado en el directorio /opt es estático y compartible. La función de este directorio es almacenar programas que no vienen con nuestro sistema operativo como por ejemplo Spotify, Google-earth, Google Chrome, Teamviewer, etc.

--Directorio /proc:

    El directorio /proc se trata de un sistema de archivos virtual. Este sistema de archivos virtual nos proporciona información acerca de los distintos procesos y aplicaciones que se están ejecutando en nuestro sistema operativo.

--Directorio /root:

    El directorio /root se trata de un directorio variable no compartible. El directorio /root es el directorio /home del administrador del sistema (usuario root).

--Directorio /sbin:

    El directorio /sbin se trata de un directorio estático y compartible. Su función es similar al directorio /bin, pero a diferencia del directorio /bin, el directorio /sbin almacena archivos binarios/ejecutables que solo puede ejecutar el usuario root o administrador del sistema.

--Directorio /srv:

    El directorio /srv se usa para almacenar directorios y datos que usan ciertos servidores que podamos tener instalados en nuestro ordenador.

--Directorio /tmp:

    El directorio /tmp es donde se crean y se almacenan los archivos temporales y las variables para que los programas puedan funcionar de forma adecuada.

--Directorio /usr:

    El directorio /usr es un directorio compartido y estático. Este directorio es el que contiene la gran mayoría de programas instalados en nuestro sistema operativo.

    Todo el contenido almacenado en la carpeta /usr es accesible para todos los usuarios y su contenido es solo de lectura.

--Directorio /var:

    El directorio /var contiene archivos de datos variables y temporales como por ejemplo los registros del sistema (logs), los registros de programas que tenemos instalados en el sistema operativo, archivos spool, etc.

    La principal función del directorio /var es la detectar problemas y solucionarlos. Se recomienda ubicar el directorio /var en una partición propia, y en caso de no ser posible es recomendable ubicarlo fuera de la partición raíz.

--Directorio /sys:

    Directorio que contiene información similar a la del directorio /proc. Dentro de esta carpeta podemos encontrar información estructurada y jerárquica acerca del kernel de nuestro equipo, de nuestras particiones y sistemas de archivo, de nuestros drivers, etc.

--Directorio /lost-found:

    Directorio que se crea en las particiones de disco con un sistema de archivos ext después ejecutar herramientas para restaurar y recuperar el sistema operativo como por ejemplo fsch.

    Si nuestro sistema no ha presentado problemas este directorio estará completamente vacío. En el caso que hayan habido problemas este directorio contendrá ficheros y directorios que han sido recuperados tras la caída del sistema operativo.

----------------------------------

clase : Uso de bashrc y zshrc

    En mi caso yo opero con una ZSH, por tanto mi archivo de configuración corresponde al ‘~/.zshrc‘. Recuerda que en caso de usar una BASH tu archivo de configuración debería estar situado en ‘~/.bashrc‘

    ls -la (a es para listar archivos ocultos)

    awk te permite printear argumentos

----------------------------------

clase : Actualización y Upgradeo del sistema

    En caso de usar Arch Linux, para efectuar una actualización de todos los paquetes instalados, deberás ejecutar el siguiente comando:

        sudo pacman -Syu

----------------------------------

Clase : Uso y manejo con Tmux

    sudo su 
    cd Desktop
    apt install tmux si no lo tenemos 
    apt search tmux (para saber si lo tenemos)
    tmux (te abre tmux)
    tmux new -s Academy

        para verlo en colorines, buscar en Google
        ohmytmux github de gpakosz 
        y hacemos los comandos que estan en su tmux 
    
----------------------------------

Clase : Búsquedas a nivel de sistema

    find / -name passwd 2>/dev/null (para buscar archivos desde la ruta raiz por nombre passwd)
    find / -name passwd 2>/dev/null | xargs ls -l (para que por cada linea resivida nos ejecute un ls )

    find / -perm -4000 (para buscar por permiso y buscar por SUID)

    find / -group savitar -type d (nos busque directorios en el grupo savitar)
    
    find / -user root -writable (buscar usuarios root y que podemos escribir)


    find / -name dex\* (busca algo que de nombre empieze con dex.. )
    find / -name dex\*.sh (busca algo que de nombre empieze con dex.. y termina en .sh)

----------------------------------

Clase : Creación de scripts en Bash

    touch script.sh (creamos un archivo sh)
    chmod +x (asignamos permiso de ejecucion)
    nvim script.sh (abrimos el archivo)

        #!/bin/bash 

        echo "Hola esto es una prueba" (printea)

        ip a | grep ens33 | tail -n 1 | awk "{print $2}" | awk "{print $1}" FS="/"

        echo -e "\n[+] esta es tu direccion ip privada -> $(ip a | grep ens33 | tail -n 1 | awk "{print $2}" | awk "{print $1}" FS="/")\n"

        (El -e sirce para caracteres especiales como el salto de linea)
        
